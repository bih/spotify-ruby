var search_data = {"index":{"searchIndex":["spotify","auth","errors","authclientcredentialserror","authorize_url()","new()","readme"],"longSearchIndex":["spotify","spotify::auth","spotify::errors","spotify::errors::authclientcredentialserror","spotify::auth#authorize_url()","spotify::auth::new()",""],"info":[["Spotify","","Spotify.html","",""],["Spotify::Auth","","Spotify/Auth.html","","<p>Spotify::Auth inherits from OAuth2::Client based on the “oauth-2” gem.\n"],["Spotify::Errors","","Spotify/Errors.html","",""],["Spotify::Errors::AuthClientCredentialsError","","Spotify/Errors/AuthClientCredentialsError.html","","<p>A Error class for when authentication client credentials are empty or\nincorrectly formatted.\n"],["authorize_url","Spotify::Auth","Spotify/Auth.html#method-i-authorize_url","(override_params={})","<p>Get a HTTP URL to send user for authorizing with Spotify.\n<p>@example\n\n<pre>@auth = Spotify::Auth.new({\n  client_id: ...</pre>\n"],["new","Spotify::Auth","Spotify/Auth.html#method-c-new","(config)","<p>Initialize the Spotify Auth object.\n<p>@example\n\n<pre>@auth = Spotify::Auth.new({\n  client_id: &quot;[client id goes ...</pre>\n"],["README","","README_md.html","","<p>bih/spotify-ruby\n<p>A modern, opinionated and <em>unofficial</em> Ruby SDK for the Spotify Web\nAPI to help developers …\n"]]}}